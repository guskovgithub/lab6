'''
Задача C
++++++++

В прихожей в ряд стоит N тапочек, которые бывают разных размеров, а также левыми и правыми. Гость выбирает два тапочка,
удовлетворяющих следующим условиям:

- выбранные тапочки должны быть одного размера;
- из выбранных тапочков левый тапочек должен стоять левее правого;
- если можно выбрать несколько пар тапочек, удовлетворяющих первым двум условиям, то выбирается два тапочка с наименьшим
  расстоянием между ними.

  В первой строке входны данных записано число тапочков N. Во второй строке записаны размеры тапочков в порядке слева
  направо, при этом левые тапочки условно обозначаются отрицательными числами (то есть -s обозначает левый тапочек, а s
  обозначает правый тапочек размера s).

  Выведите одно число: минимальное расстояние между двумя тапочками одного размера таких, что левый тапочек стоит левее
  правого. Если таких пар тапочек нет, то выведите одно число 0.

  +----------------------+-------+
  | Ввод                 | Вывод |
  +======================+=======+
  | 6                    | 2     |
  +----------------------+-------+
  | -40 41 -42 -41 42 40 |       |
  +----------------------+-------+
'''


f=open('input.txt')
blocnot=open('output.txt','w')
n=int(f.readline())
kucha_tapock=[int(i) for i in f.readline().split()]
tapki=[]
were=set()
for j in range(len(kucha_tapock)):
    if abs(kucha_tapock[j]) in were: continue
    were.add(abs(kucha_tapock[j]))
    tw=[[],[]]
    for i in range(j,len(kucha_tapock)):
        if abs(kucha_tapock[i])==abs(kucha_tapock[j]):
            tw[kucha_tapock[i]>0].append(i)
    tapki.append(tw)
mn = min([min([n+1]+[j-i for i in p[0] for j in p[1] if j>i]) for p in tapki])

if mn < n: O.write(str(mn))
else: blocnot.write('0')
blocnot.close()
f.close()

